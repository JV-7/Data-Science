import pandas as pd
from dateutil.parser import parse

##df = pd.read_csv("housing.csv")
### print(df.head())
### print(df.info())
##print(df.describe())
# print(df.shape)
# print(df.ndim)
##print(df.index)
##print("---------------------------------")
##print(df.values)
##print(df.values.ndim)
##print("----------------------")
##print(df.columns)
##print("----------------------------")
##print(df.ocean_proximity)
##print("---------------------------")
##print(df['ocean_proximity'])
##print("--------------------------------------")
##print(df[['ocean_proximity','latitude']])


##df = pd.read_csv("housing.csv",index_col = "latitude")
##print(df.head())
##print(df.index)
##print("after resetting")
##df.reset_index(inplace = True)
##print(df.head())

##df = pd.read_csv("housing.csv",usecols = ['latitude',"ocean_proximity"])
##print(df.head())

##df = pd.read_csv("housing.csv",header = 0, usecols = ['latitude',"ocean_proximity"])
##print(df.head())

##df = pd.read_csv("housing.csv",header = 1)
##print(df.head())

##df = pd.read_csv("housing.csv",header = 1, usecols = ['latitude',"ocean_proximity"])
##print(df.head())

"""Below two cases were genrally not advised to execute"""

##df = pd.read_csv("housing.csv",header = 1, names = ['col1',"col2"])
##print(df.head())

##df = pd.read_csv("housing.csv", names = ['col1',"col2"])
##print(df.head())

##var = [["dhoni","csk"],["kohli","rcb"],["ashwin","rr"]]
##print(var)
##df = pd.DataFrame(var)
##print(df)
##
##df.to_csv("anand.csv",header = None, index = None)

"""Below code wont work as it reads the existing column names and there is no such name of that"""
####new_df = pd.read_csv("anand.csv", usecols = ["name","team"])
####print(new_df)
##
##new_df = pd.read_csv("anand.csv", names = ["name","team"])
##print(new_df)

"""------------------------------------------------------------------------------------------------"""

##df = pd.read_csv("housing.csv", skiprows = 2)
##print(df.head())

##df = pd.read_csv("housing.csv", skipfooter = 2)
##print(df.tail())
##
##df = pd.read_csv("housing.csv", skipfooter = 2, engine = "python")
##print(df.tail())

"""--------------------------------------------------Time Parsing---------------------------------------------------------------------"""


##df = pd.read_csv("a10.csv")
##print(df.head())
##print(df.index)
##print(df.columns)
##print(type(df.date))
##print(df.date.dtype)

##df = pd.read_csv("a10.csv",parse_dates = ["date"])
##print(df.head())
##print(df.date.dtype)

#format = 01-07-1991

##for x in df.date:
##    #print(x.strftime("%b"))
##    print(x.strftime("%Y"))

##df["year"] = [x.strftime("%Y") for x in df.date]
##print(df.head())
##
##df["only_date"] = [x.strftime("%d") for x in df.date]
##print(df.head())
##
##df["month"] = [x.strftime("%m") for x in df.date]
##print(df.head())
##
##df["month_string"] = [x.strftime("%b") for x in df.date]
##print(df.head())
##
##df["month_full"] = [x.strftime("%B") for x in df.date]
##print(df.head())

"""---------------------------------------------------------------Data Transformation-----------------------------------------"""

##df = pd.read_csv("a10.csv",parse_dates = ["date"])
##print(df.head())
####print(df[0:7]) #slicing
####print("------------------------")
####print(df.loc[0])
####print(df.loc[0:7])
####print("****************************")
####print(df.loc[0:7,"value"]) #pick between oth index to 6th index but only value column in it.
####print("=======================")
####print(df.iloc[0:7,1])
##print(df.loc[[0,7]])



df = pd.DataFrame({"A":[1,2,3,4,5,6],"B":[2,4,6,8,10,12],"C":[3,6,9,1,15,18]}, index = ["r1","r2","r3","r4","r5","r6"])
print(df)
##print(df.loc["r1":"r4"])
##print(df.iloc[0:5])

##print(df.iloc[0])
##print(df.iloc[0]>1)
##
##print(df.loc["r1"])
##print(df.loc["r1"]>1)

##print(df.iloc[0])
##print(df.loc[df["A"]>1])
##
##print(df.iloc[0])
##print(df.loc[df[["A","C"]]>1]) #error case.

##print(df.loc[:, "A"])
##print(df.loc["r1":"r2", "A"])

print(df.loc[:, ["A","B"]])
#loc and iloc
#loc ---> Label based indexing
#iloc ---> integer based indexing


##df = pd.read_csv("a10.csv",parse_dates = ["date"])
##print(df.iloc[0:7,"value"]) #this will throw an erroa s you can't do non integer based slicing







































































